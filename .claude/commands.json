{
  "commands": {
    "coderabbit-review": {
      "description": "Systematically respond to unresolved CodeRabbit feedback on a PR",
      "parameters": [
        {
          "name": "pr_number",
          "description": "The pull request number to review",
          "required": true,
          "type": "number"
        }
      ],
      "prompt": "I need you to systematically respond to all unresolved CodeRabbit feedback on PR #{pr_number}. Follow the CodeRabbit PR Review Response Process documented in CLAUDE.md:\n\n1. **Initial Assessment**: Get overview of PR comments and create todo list\n2. **Find Unresolved Comments**: Use GitHub API and WebFetch to identify comments with 'Resolve conversation' buttons\n3. **Respond to Comments**: Use nested replies (NOT general PR comments) via GitHub API\n4. **Strategic Responses**: Agree with implementation, disagree with reasoning, or partially agree\n5. **Implementation**: Make code changes when agreeing with suggestions\n6. **Validation**: Ensure proper nesting and run tests\n7. **Commit and Push Changes**: ALWAYS commit and push any code changes made during the review process\n\nIMPORTANT: Always respond to specific inline code comments, never leave general PR comments. Use the format: `gh api repos/REPO/pulls/PR/comments/COMMENT_ID/replies -X POST --field body=\"RESPONSE\"`\n\nAfter making any code changes, ALWAYS commit with: `git add . && git commit -m \"Address CodeRabbit feedback: [description] ðŸ¤– Generated with [Claude Code](https://claude.ai/code) Co-Authored-By: Claude <noreply@anthropic.com>\" && git push`\n\nStart by assessing PR #{pr_number} and work through each unresolved CodeRabbit comment systematically."
    }
  }
}